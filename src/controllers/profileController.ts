import { Composer } from 'grammy';
import { ProfileService } from '../services/profileService';
import type { MyContext } from '../index';
import { logger } from '../utils/logger';
import { formatDate } from '../utils/stringUtils';
import { UserRepository } from '../db/repositories/userRepository';
import { handleError } from '../utils/errorHandler';

const profileService = new ProfileService();
const userRepository = new UserRepository();
const profileController = new Composer<MyContext>();

logger.info('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è');

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
profileController.command('profile', async (ctx) => {
  logger.info('üìù –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /profile —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è');
  
  try {
    if (!ctx.from) {
      logger.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ');
      await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return;
    }
    
    const telegramId = ctx.from.id;
    logger.info(`–ó–∞–ø—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Telegram ID: ${telegramId}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const user = await userRepository.findByTelegramId(telegramId);
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (user) {
      logger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      logger.info(`–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.username}, —Ä–æ–ª—å: ${user.role}`);
    } else {
      logger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }
    
    if (!user) {
      await ctx.reply('‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /apply');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const profile = await profileService.getProfile(telegramId);
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    if (profile) {
      logger.info('–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–π–¥–µ–Ω');
      logger.info(`–ù–∏–∫–Ω–µ–π–º: ${profile.nickname}, Minecraft: ${profile.minecraft_username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
    } else {
      logger.info('–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    if (!profile) {
      await ctx.reply('‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –µ—â–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.');
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ü–µ–Ω–æ–∫
    const ratingHistory = await profileService.getRatingHistory(profile.user_id);
    
    const reputationScore = profile.positive_ratings_received - profile.negative_ratings_received;

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Ñ–∏–ª–µ
    let message = `üìä *–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:*\n\n`;
    message += `üë§ –ù–∏–∫–Ω–µ–π–º: ${profile.nickname}\n`;
    if (profile.minecraft_username) {
      message += `üéÆ Minecraft: ${profile.minecraft_username}\n`;
    }
    message += `üìÖ –î–∞—Ç–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è: ${formatDate(profile.join_date)}\n\n`;
    
    message += `*–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞:*\n`;
    message += `‚≠êÔ∏è –†–µ–ø—É—Ç–∞—Ü–∏—è: ${reputationScore}\n`;
    message += `üëç –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏: ${profile.positive_ratings_received}\n`;
    message += `üëé –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏: ${profile.negative_ratings_received}\n`;
    message += `üìä –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ü–µ–Ω–æ–∫: ${profile.total_ratings_received}\n`;
    message += `‚úçÔ∏è –í—ã–¥–∞–Ω–æ –æ—Ü–µ–Ω–æ–∫: ${profile.total_ratings_given}\n\n`;

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (ratingHistory && ratingHistory.length > 0) {
      message += `*–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏:*\n`;
      ratingHistory.slice(0, 5).forEach(rating => {
        const icon = rating.isPositive ? 'üëç' : 'üëé';
        message += `${icon} –æ—Ç ${rating.raterNickname}`;
        if (rating.reason) {
          message += `: ${rating.reason}`;
        }
        message += '\n';
      });
    }

    await ctx.reply(message, { parse_mode: 'Markdown' });
    logger.info('–°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /profile:', error);
    console.error('–ü–æ–¥—Ä–æ–±–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
profileController.command('viewprofile', handleError(async (ctx) => {
    const text = ctx.message?.text;
    if (!text) {
        await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è');
        return;
    }

    const args = text.split(' ');
    if (args.length < 2) {
        await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /viewprofile <–Ω–∏–∫–Ω–µ–π–º>');
        return;
    }

    const targetNickname = args[1] || '';
    if (!targetNickname) {
        await ctx.reply('‚ùå –ù–∏–∫–Ω–µ–π–º –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
        return;
    }

    const profiles = await profileService.getProfileByNickname(targetNickname);
    
    if (!profiles || profiles.length === 0) {
        await ctx.reply('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –Ω–∏–∫–Ω–µ–π–º–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    const profile = profiles[0];
    if (!profile) {
        await ctx.reply('‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    const ratingHistory = await profileService.getRatingHistory(profile.user_id);
    const reputationScore = profile.positive_ratings_received - profile.negative_ratings_received;

    let message = `üìä *–ü—Ä–æ—Ñ–∏–ª—å ${profile.nickname}:*\n\n`;
    if (profile.minecraft_username) {
        message += `üéÆ Minecraft: ${profile.minecraft_username}\n`;
    }
    message += `üìÖ –î–∞—Ç–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è: ${formatDate(profile.join_date)}\n\n`;
    
    message += `*–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞:*\n`;
    message += `‚≠êÔ∏è –†–µ–ø—É—Ç–∞—Ü–∏—è: ${reputationScore}\n`;
    message += `üëç –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏: ${profile.positive_ratings_received}\n`;
    message += `üëé –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏: ${profile.negative_ratings_received}\n`;
    message += `üìä –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ü–µ–Ω–æ–∫: ${profile.total_ratings_received}\n\n`;

    if (ratingHistory.length > 0) {
        message += `*–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏:*\n`;
        ratingHistory.slice(0, 5).forEach(rating => {
            const icon = rating.isPositive ? 'üëç' : 'üëé';
            message += `${icon} –æ—Ç ${rating.raterNickname}`;
            if (rating.reason) {
                message += `: ${rating.reason}`;
            }
            message += '\n';
        });
    }

    await ctx.reply(message, { parse_mode: 'Markdown' });
}));

export { profileController };