const mariadb = require('mariadb');

async function checkUsers() {
  const pool = mariadb.createPool({
    host: 'localhost',
    port: 3306,
    user: 'root',
    password: 'ga540012',
    database: 'minecraft_bot',
    connectionLimit: 5
  });
  
  let connection;

  try {
    connection = await pool.getConnection();
    console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∂–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüìã –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
    const allUsers = await connection.query('SELECT id, username, role, minecraft_uuid FROM users');
    allUsers.forEach(user => {
      console.log(`- ID: ${user.id}, Username: ${user.username}, Role: ${user.role}, UUID: ${user.minecraft_uuid}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é 'member' –∏ UUID
    const membersWithUUID = await connection.query(
      'SELECT * FROM users WHERE role = ? AND minecraft_uuid IS NOT NULL AND minecraft_uuid != ?',
      ['member', '']
    );

    console.log(`\nüë• –ù–∞–π–¥–µ–Ω–æ ${membersWithUUID.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é 'member' –∏ Minecraft UUID`);
    
    if (membersWithUUID.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é \'member\' –∏ Minecraft UUID');
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞
      console.log('\nüîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ç–æ–ª—å–∫–æ —Å —Ä–æ–ª—å—é 'member'
      const membersOnly = await connection.query('SELECT * FROM users WHERE role = ?', ['member']);
      console.log(`- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é 'member': ${membersOnly.length}`);
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å UUID
      const usersWithUUID = await connection.query('SELECT * FROM users WHERE minecraft_uuid IS NOT NULL AND minecraft_uuid != ?', ['']);
      console.log(`- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å UUID: ${usersWithUUID.length}`);
      
      if (usersWithUUID.length > 0) {
        console.log('\nüìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å UUID:');
        usersWithUUID.forEach(user => {
          console.log(`- ID: ${user.id}, Username: ${user.username}, Role: ${user.role}, UUID: ${user.minecraft_uuid}`);
        });
      }
    } else {
      console.log('\nüìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–æ–ª—å—é \'member\' –∏ UUID:');
      membersWithUUID.forEach(user => {
        console.log(`- ID: ${user.id}, Username: ${user.username}, Role: ${user.role}, UUID: ${user.minecraft_uuid}`);
      });
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    if (connection) connection.release();
    await pool.end();
  }
}

checkUsers().catch(console.error);